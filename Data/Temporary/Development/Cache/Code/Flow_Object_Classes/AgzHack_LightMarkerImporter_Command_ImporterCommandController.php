<?php 

namespace AgzHack\LightMarkerImporter\Command;

use AgzHack\Geo\Domain\Model\Coordinate;
use AgzHack\Lux\Domain\Model\LightMarker;
use AgzHack\Lux\Service\LightMarkerService;
use Neos\Flow\Annotations as Flow;
use Neos\Flow\Cli\CommandController;
use Neos\Flow\Persistence\PersistenceManagerInterface;

/**
 * @Flow\Scope("singleton")
 */
class ImporterCommandController_Original extends CommandController
{

    /**
     * @var LightMarkerService
     * @Flow\Inject
     */
    protected $lightMarkerService;

    /**
     * @Flow\Inject
     * @var PersistenceManagerInterface
     */
    protected $persistenceManager;

    public function ImportFromCsvFileCommand()
    {
        $row = 1;
        if (($handle = fopen(FLOW_PATH_PACKAGES . 'Application/AgzHack.LightMarkerImporter/Resources/novembrofsa.csv', "r")) !== false) {
            while (($data = fgetcsv($handle, 1000, ",")) !== false) {
                $row++;
                //2/11/2017 13:20

                $date = \DateTime::createFromFormat('d/m/Y H:i', $data[0]);
                $address = urlencode($data[1] . ', Feira de Santana, Bahia, Brasil');
                $result = file_get_contents("https://maps.googleapis.com/maps/api/geocode/json?address={$address}&key=AIzaSyDASp_574_fcn7CmSlsJ1kz55g2qHzJgHo", "r");
                $resultGoogle = json_decode($result, true)['results'];

                if (count($resultGoogle) == 0) {
                    continue;
                }
                $resultGoogle = $resultGoogle[0];

                if (!array_key_exists('geometry', $resultGoogle)) {
                    continue;
                }
                $coordinate = new Coordinate($resultGoogle['geometry']['location']['lat'], $resultGoogle['geometry']['location']['lng']);
                $lightMarker = new LightMarker($coordinate, false, $date);

                $this->lightMarkerService->addDiscreteMarker($lightMarker);
                $this->persistenceManager->persistAll();
            }
            fclose($handle);
        }
    }
}

#
# Start of Flow generated Proxy code
#
namespace AgzHack\LightMarkerImporter\Command;

use Doctrine\ORM\Mapping as ORM;
use Neos\Flow\Annotations as Flow;

/**
 * 
 * @\Neos\Flow\Annotations\Scope("singleton")
 */
class ImporterCommandController extends ImporterCommandController_Original implements \Neos\Flow\ObjectManagement\Proxy\ProxyInterface {

    use \Neos\Flow\ObjectManagement\Proxy\ObjectSerializationTrait, \Neos\Flow\ObjectManagement\DependencyInjection\PropertyInjectionTrait;


    /**
     * Autogenerated Proxy Method
     */
    public function __construct()
    {
        if (get_class($this) === 'AgzHack\LightMarkerImporter\Command\ImporterCommandController') \Neos\Flow\Core\Bootstrap::$staticObjectManager->setInstance('AgzHack\LightMarkerImporter\Command\ImporterCommandController', $this);
        parent::__construct();
        if ('AgzHack\LightMarkerImporter\Command\ImporterCommandController' === get_class($this)) {
            $this->Flow_Proxy_injectProperties();
        }
    }

    /**
     * Autogenerated Proxy Method
     */
    public function __sleep()
    {
            $result = NULL;
        $this->Flow_Object_PropertiesToSerialize = array();

        $transientProperties = array (
);
        $propertyVarTags = array (
  'lightMarkerService' => 'AgzHack\\Lux\\Service\\LightMarkerService',
  'persistenceManager' => 'Neos\\Flow\\Persistence\\PersistenceManagerInterface',
  'request' => 'Neos\\Flow\\Cli\\Request',
  'response' => 'Neos\\Flow\\Cli\\Response',
  'arguments' => 'Neos\\Flow\\Mvc\\Controller\\Arguments',
  'commandMethodName' => 'string',
  'objectManager' => 'Neos\\Flow\\ObjectManagement\\ObjectManagerInterface',
  'commandManager' => 'Neos\\Flow\\Cli\\CommandManager',
  'output' => 'Neos\\Flow\\Cli\\ConsoleOutput',
);
        $result = $this->Flow_serializeRelatedEntities($transientProperties, $propertyVarTags);
        return $result;
    }

    /**
     * Autogenerated Proxy Method
     */
    public function __wakeup()
    {
        if (get_class($this) === 'AgzHack\LightMarkerImporter\Command\ImporterCommandController') \Neos\Flow\Core\Bootstrap::$staticObjectManager->setInstance('AgzHack\LightMarkerImporter\Command\ImporterCommandController', $this);

        $this->Flow_setRelatedEntities();
        $this->Flow_Proxy_injectProperties();
    }

    /**
     * Autogenerated Proxy Method
     */
    private function Flow_Proxy_injectProperties()
    {
        $this->injectCommandManager(\Neos\Flow\Core\Bootstrap::$staticObjectManager->get('Neos\Flow\Cli\CommandManager'));
        $this->injectObjectManager(\Neos\Flow\Core\Bootstrap::$staticObjectManager->get('Neos\Flow\ObjectManagement\ObjectManagerInterface'));
        $this->Flow_Proxy_LazyPropertyInjection('AgzHack\Lux\Service\LightMarkerService', 'AgzHack\Lux\Service\LightMarkerService', 'lightMarkerService', '29ed746806b74e947f83a36103239c9b', function() { return \Neos\Flow\Core\Bootstrap::$staticObjectManager->get('AgzHack\Lux\Service\LightMarkerService'); });
        $this->Flow_Proxy_LazyPropertyInjection('Neos\Flow\Persistence\PersistenceManagerInterface', 'Neos\Flow\Persistence\Doctrine\PersistenceManager', 'persistenceManager', '8a72b773ea2cb98c2933df44c659da06', function() { return \Neos\Flow\Core\Bootstrap::$staticObjectManager->get('Neos\Flow\Persistence\PersistenceManagerInterface'); });
        $this->Flow_Injected_Properties = array (
  0 => 'commandManager',
  1 => 'objectManager',
  2 => 'lightMarkerService',
  3 => 'persistenceManager',
);
    }
}
# PathAndFilename: /var/www/lux/Packages/Application/AgzHack.LightMarkerImporter/Classes/Command/ImporterCommandController.php
#