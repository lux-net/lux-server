<?php 
namespace Neos\Flow\Property\TypeConverter\Error;

/*
 * This file is part of the Neos.Flow package.
 *
 * (c) Contributors of the Neos Project - www.neos.io
 *
 * This package is Open Source Software. For the full copyright and license
 * information, please view the LICENSE file which was distributed with this
 * source code.
 */

use Neos\Error\Messages\Error;

/**
 * A "target not found" error that is issued when a referenced object/value could not be fetched
 */
class TargetNotFoundError_Original extends Error
{
}

#
# Start of Flow generated Proxy code
#
namespace Neos\Flow\Property\TypeConverter\Error;

use Doctrine\ORM\Mapping as ORM;
use Neos\Flow\Annotations as Flow;

/**
 * A "target not found" error that is issued when a referenced object/value could not be fetched
 */
class TargetNotFoundError extends TargetNotFoundError_Original implements \Neos\Flow\ObjectManagement\Proxy\ProxyInterface {

    use \Neos\Flow\ObjectManagement\Proxy\ObjectSerializationTrait;


    /**
     * Autogenerated Proxy Method
     * @param string $message An english error message which is used if no other error message can be resolved
     * @param integer|null $code A unique error code
     * @param array $arguments Array of arguments to be replaced in message
     * @param string|null $title optional title for the message
     */
    public function __construct()
    {
        $arguments = func_get_args();
        if (!array_key_exists(0, $arguments)) throw new \Neos\Flow\ObjectManagement\Exception\UnresolvedDependenciesException('Missing required constructor argument $message in class ' . __CLASS__ . '. Note that constructor injection is only support for objects of scope singleton (and this is not a singleton) â€“ for other scopes you must pass each required argument to the constructor yourself.', 1296143788);
        call_user_func_array('parent::__construct', $arguments);
    }

    /**
     * Autogenerated Proxy Method
     */
    public function __sleep()
    {
            $result = NULL;
        $this->Flow_Object_PropertiesToSerialize = array();

        $transientProperties = array (
);
        $propertyVarTags = array (
  'severity' => 'string',
  'message' => 'string',
  'title' => 'string',
  'code' => 'integer',
  'arguments' => 'array',
);
        $result = $this->Flow_serializeRelatedEntities($transientProperties, $propertyVarTags);
        return $result;
    }

    /**
     * Autogenerated Proxy Method
     */
    public function __wakeup()
    {

        $this->Flow_setRelatedEntities();
    }
}
# PathAndFilename: /var/www/lux/Packages/Framework/Neos.Flow/Classes/Property/TypeConverter/Error/TargetNotFoundError.php
#